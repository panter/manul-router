{"version":3,"sources":["../src/manul-router.js"],"names":["FlowRouter","Meteor","i18n","globals","routeConfirmCallback","createNavItem","go","pathDef","fields","queryParams","path","useReplaceState","env","replaceState","get","badSlash","replace","_page","newParams","newQueryParams","current","routeName","route","params","getRouteName","reactive","watchPathChange","paramName","getParam","setParams","queryStringKey","getQueryParam","setQueryParams","locale","getLocale","args","nav","_wrapAsNavItemIfneeded","allOnRoutes","onRoute","reduce","promiseChain","then","next","should","s","resolve","href","baseRoutes","group","prefix","triggersEnter","_setLocaleByRoute","bind","redirect","stop","supports","setLocale","getFallbackLocale","isCordova","firstArg"],"mappings":"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","file":"manul-router.js","sourcesContent":["import flatten from 'lodash/flatten';\n\nimport last from 'lodash/last';\nimport isBoolean from 'lodash/isBoolean';\n\nimport has from 'lodash/has';\n\nimport isFunction from 'lodash/isFunction';\n\nimport CreateNavItem from './create_nav_item';\nimport disableFlowRouterClickDetection from './disable_flowrouter_click_detection';\n\n/**\n\n  const manulRouter = new ManulRouter(\n    {FlowRouter, Meteor, i18n},\n    {\n      // onRoute will be called when route is changed\n      // it will be called with the navItem and a next-function\n      // route will continue if you either return true or call the next-function\n      // otherwise, route change is canceled.\n      onRoute(navItem:Object, next:Function)\n    }\n  );\n**/\nexport default class {\n  constructor({ FlowRouter, Meteor, i18n }, globals = {}) {\n    this.FlowRouter = FlowRouter;\n    this.i18n = i18n;\n    this.routeConfirmCallback = null;\n    this.globals = globals;\n    this.Meteor = Meteor;\n    this.createNavItem = CreateNavItem(this);\n    // path bad path escaping when setting params\n    // see https://github.com/kadirahq/flow-router/issues/601#issuecomment-327393055\n    this.FlowRouter.go = function (pathDef, fields, queryParams) {\n      let path = this.path(pathDef, fields, queryParams);\n      const useReplaceState = this.env.replaceState.get();\n      const badSlash = /%252F/g;\n      path = path.replace(badSlash, '/');\n\n      if (useReplaceState) {\n        this._page.replace(path);\n      } else {\n        this._page(path);\n      }\n    };\n    disableFlowRouterClickDetection({ FlowRouter, Meteor });\n  }\n\n  createNavItemForCurrentPage(newParams = {}, newQueryParams = {}) {\n    const current = this.FlowRouter.current();\n    return this.createNavItem({\n      routeName: current.route.path, // this is the route definition / path with placeholders!\n      params: { ...current.params, ...newParams },\n      queryParams: { ...current.queryParams, ...newQueryParams },\n    });\n  }\n\n  /**\n    current route name tracker-reactive\n  **/\n  getRouteName() {\n    return this.FlowRouter.getRouteName();\n  }\n  /**\n  get the current path tracker-reactive\n  **/\n  getCurrentPath(reactive = true) {\n    if (reactive) this.FlowRouter.watchPathChange();\n    return this.FlowRouter.current().path;\n  }\n\n  /**\n  get the current route defininition tracker-reactive\n  **/\n  getCurrentRoute(reactive = true) {\n    if (reactive) this.FlowRouter.watchPathChange();\n    return this.FlowRouter.current().route;\n  }\n  /**\n  get a url path param by name, tracker-reactive\n  **/\n  getParam(paramName) {\n    return this.FlowRouter.getParam(paramName);\n  }\n\n  /**\n  set a url path param in the current route\n  **/\n  setParams(newParams) {\n    this.FlowRouter.setParams(newParams);\n  }\n\n  /**\n  get queryparams, tracker-reactive\n  **/\n  getQueryParam(queryStringKey) {\n    return this.FlowRouter.getQueryParam(queryStringKey);\n  }\n\n  /**\n    set queryString params, you can pass an object with key:values\n  **/\n  setQueryParams(newQueryParams) {\n    this.FlowRouter.setQueryParams(newQueryParams);\n  }\n\n  /**\n    construct a path by the routeName, params and queryParams.\n    It automatically adds the locale to the route if it is a localeRoute\n  **/\n  getPath(routeName, params, queryParams) {\n    return this.FlowRouter.path(\n      routeName,\n      { locale: this.i18n.getLocale(), ...params },\n      queryParams,\n      // flow router does escape \"/\" in the route-params, but we like to keep them\n      // FIXME: may break cases where / is in a queryParam\n    ).replace(/%252F/g, '/');\n  }\n\n  /**\n  got to the given route. The arguments can be:\n  - routeName, params, queryParams\n  - a path (string)\n  - a navItem (created with createNavItem)\n\n\n  This will trigger route-callbacks (onRoute)\n\n  you can additionally pass a callback as the last param,\n  this will be called after all onRoute-Callbacks has been resolved\n\n  **/\n  go(...args) {\n    const nav = this._wrapAsNavItemIfneeded(args);\n    const allOnRoutes = flatten([nav.onRoute, this.globals.onRoute]);\n    allOnRoutes\n      .reduce(\n        (promiseChain, onRoute) =>\n          promiseChain.then(\n            () =>\n              new Promise((next) => {\n                if (isFunction(onRoute)) {\n                  // onRoute can either return true/ false\n                  // or call its second arg (next) with no value or true\n                  const should = onRoute(nav, (s = true) => s && next());\n                  if (isBoolean(should) && should) {\n                    next();\n                  }\n                } else {\n                  next();\n                }\n              }),\n          ),\n        Promise.resolve(),\n      )\n      .then(() => {\n        this.FlowRouter.go(nav.href);\n        // check if last arg is a callback function and execute\n        if (isFunction(last(args))) {\n          last(args)();\n        }\n      });\n  }\n\n  createLocaleRoutesGroup(baseRoutes = this.FlowRouter) {\n    return baseRoutes.group({\n      prefix: '/:locale?',\n      triggersEnter: [this._setLocaleByRoute.bind(this)],\n    });\n  }\n\n  _setLocaleByRoute(\n    {\n      params: { locale },\n    },\n    redirect,\n    stop,\n  ) {\n    if (!locale) {\n      // do nothing, let it as default. usually this is root page\n    } else if (this.i18n.supports(locale)) {\n      this.i18n.setLocale(locale);\n    } else {\n      this.setParams({ locale: this.i18n.getFallbackLocale(locale) });\n      stop();\n    }\n  }\n\n  redirect(...args) {\n    // on ios and android cordova reidrect throws a security error.\n    // we skip this on both ios and android\n    if (this.Meteor.isCordova) {\n      this.go(...args);\n    } else {\n      const nav = this._wrapAsNavItemIfneeded(args);\n      this.FlowRouter.redirect(nav.href);\n    }\n  }\n\n  _wrapAsNavItemIfneeded(args) {\n    const firstArg = args[0];\n    if (has(firstArg, 'href')) {\n      // is already a nav item\n      return args[0];\n    }\n    return this.createNavItem({\n      routeName: args[0],\n      params: args[1],\n      queryParams: args[2],\n    });\n  }\n}\n"]}