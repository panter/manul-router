{"version":3,"sources":["../src/manul-router.js"],"names":["FlowRouter","Meteor","i18n","globals","routeConfirmCallback","createNavItem","newParams","newQueryParams","current","routeName","route","path","params","queryParams","getRouteName","paramName","getParam","setParams","queryStringKey","getQueryParam","setQueryParams","locale","getLocale","replace","args","nav","_wrapAsNavItemIfneeded","allOnRoutes","onRoute","reduce","promiseChain","then","Promise","next","should","s","resolve","go","href","baseRoutes","group","prefix","triggersEnter","_setLocaleByRoute","bind","redirect","stop","supports","setLocale","getFallbackLocale","isCordova","window","cordova","platformId","firstArg"],"mappings":"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","file":"manul-router.js","sourcesContent":["import _ from 'lodash';\n\nimport CreateNavItem from './create_nav_item';\nimport disableFlowRouterClickDetection from\n  './disable_flowrouter_click_detection';\n\n\n/**\n\n  const manulRouter = new ManulRouter(\n    {FlowRouter, Meteor, i18n},\n    {\n      // onRoute will be called when route is changed\n      // it will be called with the navItem and a next-function\n      // route will continue if you either return true or call the next-function\n      // otherwise, route change is canceled.\n      onRoute(navItem:Object, next:Function)\n    }\n  );\n**/\nexport default class {\n  constructor({ FlowRouter, Meteor, i18n }, globals = {}) {\n    this.FlowRouter = FlowRouter;\n    this.i18n = i18n;\n    this.routeConfirmCallback = null;\n    this.globals = globals;\n    this.Meteor = Meteor;\n    this.createNavItem = CreateNavItem(this);\n\n    disableFlowRouterClickDetection({ FlowRouter, Meteor });\n  }\n\n  createNavItemForCurrentPage(newParams = {}, newQueryParams = {}) {\n    const current = this.FlowRouter.current();\n    return this.createNavItem({\n      routeName: current.route.path, // this is the route definition / path with placeholders!\n      params: { ...current.params, ...newParams },\n      queryParams: { ...current.queryParams, ...newQueryParams },\n    });\n  }\n\n  /**\n    current route name (reactive)\n  **/\n  getRouteName() {\n    return this.FlowRouter.getRouteName();\n  }\n  /**\n  get the current path (non-reactive)\n  **/\n  getCurrentPath() {\n    return this.FlowRouter.current().path;\n  }\n\n  /**\n  get the current route defininition (non-reactive)\n  **/\n  getCurrentRoute() {\n    return this.FlowRouter.current().route;\n  }\n  /**\n  get a url path param by name, tracker-reactive\n  **/\n  getParam(paramName) {\n    return this.FlowRouter.getParam(paramName);\n  }\n\n  /**\n  set a url path param in the current route\n  **/\n  setParams(newParams) {\n    this.FlowRouter.setParams(newParams);\n  }\n\n  /**\n  get queryparams, tracker-reactive\n  **/\n  getQueryParam(queryStringKey) {\n    return this.FlowRouter.getQueryParam(queryStringKey);\n  }\n\n  /**\n    set queryString params, you can pass an object with key:values\n  **/\n  setQueryParams(newQueryParams) {\n    this.FlowRouter.setQueryParams(newQueryParams);\n  }\n\n  /**\n    construct a path by the routeName, params and queryParams.\n    It automatically adds the locale to the route if it is a localeRoute\n  **/\n  getPath(routeName, params, queryParams) {\n    return this.FlowRouter.path(\n      routeName,\n      { locale: this.i18n.getLocale(), ...params },\n      queryParams,\n      // flow router does escape \"/\" in the route-params, but we like to keep them\n      // FIXME: may break cases where / is in a queryParam\n    ).replace(/%252F/g, '/');\n  }\n\n  /**\n  got to the given route. The arguments can be:\n  - routeName, params, queryParams\n  - a path (string)\n  - a navItem (created with createNavItem)\n\n\n  This will trigger route-callbacks (onRoute)\n\n  you can additionally pass a callback as the last param,\n  this will be called after all onRoute-Callbacks has been resolved\n\n\n  **/\n  go(...args) {\n    const nav = this._wrapAsNavItemIfneeded(args);\n    const allOnRoutes = _.flatten([nav.onRoute, this.globals.onRoute]);\n    allOnRoutes.reduce(\n        (promiseChain, onRoute) => promiseChain.then(\n          () => new Promise((next) => {\n            if (_.isFunction(onRoute)) {\n              // onRoute can either return true/ false\n              // or call its second arg (next) with no value or true\n              const should = onRoute(\n                nav,\n                (s = true) => (s && next()),\n              );\n              if (_.isBoolean(should) && should) {\n                next();\n              }\n            } else {\n              next();\n            }\n          }),\n        ), Promise.resolve(),\n      ).then(() => {\n        this.FlowRouter.go(nav.href);\n        // check if last arg is a callback function and execute\n        if (_.isFunction(_.last(args))) {\n          _.last(args)();\n        }\n      });\n  }\n\n  createLocaleRoutesGroup(baseRoutes = this.FlowRouter) {\n    return baseRoutes.group({\n      prefix: '/:locale?',\n      triggersEnter: [this._setLocaleByRoute.bind(this)],\n    });\n  }\n\n  _setLocaleByRoute({ params: { locale } }, redirect, stop) {\n    if (this.i18n.supports(locale)) {\n      this.i18n.setLocale(locale);\n    } else {\n      this.setParams({ locale: this.i18n.getFallbackLocale(locale) });\n      stop();\n    }\n  }\n\n  redirect(...args) {\n    // on ios cordova reidrect throws a security error.\n    // we skip this on ios (it has no back button anyway, so no need for redirect)\n    /* global window */\n    /* global document */\n    if (this.Meteor.isCordova && window.cordova.platformId === 'ios') {\n      this.go(...args);\n    } else {\n      const nav = this._wrapAsNavItemIfneeded(args);\n      this.FlowRouter.redirect(nav.href);\n    }\n  }\n\n  _wrapAsNavItemIfneeded(args) {\n    const firstArg = args[0];\n    if (_.has(firstArg, 'href')) {\n      // is already a nav item\n      return args[0];\n    }\n    return this.createNavItem({\n      routeName: args[0],\n      params: args[1],\n      queryParams: args[2],\n    });\n  }\n}\n"]}